{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/GlobalStyle.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","_ref","data","location","siteTitle","site","siteMetadata","title","a","createElement","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","description","lang","meta","array","keywords","arrayOf","SEO","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","authors","concat","length","join","_public_static_d_1794625727_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","GlobalStyle","createGlobalStyle","_templateObject","HomeLink","styled","Link","withConfig","displayName","componentId","Main","main","node","Layout","react_default","Div_default","column","components_GlobalStyle","to"],"mappings":"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","file":"component---src-pages-404-js-b43411ede3ac6ed72b50.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/Layout'\r\nimport SEO from '../components/SEO'\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"404: Not Found\" />\r\n      <h1>Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nconst propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nconst defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nconst SEO = ({ description, lang, meta, keywords, title }) => (\r\n  <StaticQuery\r\n    query={detailsQuery}\r\n    render={data => {\r\n      const metaDescription = description || data.site.siteMetadata.description\r\n\r\n      return (\r\n        <Helmet\r\n          htmlAttributes={{\r\n            lang,\r\n          }}\r\n          title={title}\r\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n          meta={[\r\n            {\r\n              name: 'description',\r\n              content: metaDescription,\r\n            },\r\n            {\r\n              property: 'og:title',\r\n              content: title,\r\n            },\r\n            {\r\n              property: 'og:description',\r\n              content: metaDescription,\r\n            },\r\n            {\r\n              property: 'og:type',\r\n              content: 'website',\r\n            },\r\n            {\r\n              name: 'twitter:card',\r\n              content: 'summary',\r\n            },\r\n            {\r\n              name: 'twitter:creator',\r\n              content: data.site.siteMetadata.authors,\r\n            },\r\n            {\r\n              name: 'twitter:title',\r\n              content: title,\r\n            },\r\n            {\r\n              name: 'twitter:description',\r\n              content: metaDescription,\r\n            },\r\n          ]\r\n            .concat(\r\n              keywords.length > 0\r\n                ? {\r\n                    name: 'keywords',\r\n                    content: keywords.join(', '),\r\n                  }\r\n                : []\r\n            )\r\n            .concat(meta)}\r\n        />\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nSEO.propTypes = propTypes\r\nSEO.defaultProps = defaultProps\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        authors\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    font: 14px/1.5 Merriweather, Georgia, serif;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    color: #333;\r\n  }\r\n\r\n  *, *::after, *::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  h1, h2, h3, h4, h5 {\r\n    font-family: Cinzel, serif;\r\n    font-weight: 100;\r\n    line-height: 0.9;\r\n\r\n    a {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  a {\r\n    color: #005882;\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  blockquote {\r\n    margin: 0;\r\n    border-left: 5px solid rgba(0, 88, 130, .3);\r\n    padding: 0 1em;\r\n\r\n    font-style: italic;\r\n    font-weight: 300;\r\n  }\r\n\r\n  .gatsby-highlight {\r\n    overflow: auto;\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\nimport Div from 'styled-kit/Div'\r\n\r\nimport GlobalStyle from './GlobalStyle'\r\n\r\nconst HomeLink = styled(Link)`\r\n  flex: none;\r\n  display: block;\r\n  padding: 32px 16px;\r\n  font: 35px/0.6 Cinzel, serif;\r\n  text-decoration: none;\r\n`\r\n\r\nconst Main = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  padding: 16px;\r\n  width: 100%;\r\n  max-width: 1024px;\r\n  overflow: auto;\r\n`\r\n\r\nconst propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nconst Layout = ({ title, children }) => (\r\n  <Div column>\r\n    <GlobalStyle />\r\n    <HomeLink to=\"/\">{title}</HomeLink>\r\n    <Main>{children}</Main>\r\n  </Div>\r\n)\r\n\r\nLayout.propTypes = propTypes\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}