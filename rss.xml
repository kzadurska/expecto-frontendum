<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Expecto Frontendum]]></title><description><![CDATA[A blog about all things frontend]]></description><link>https://expectofrontendum.com/</link><generator>RSS for Node</generator><lastBuildDate>Sat, 27 Apr 2019 17:08:19 GMT</lastBuildDate><item><title><![CDATA[My VS Code setup]]></title><description><![CDATA[Background I am a huge fan of VS Code. I previously coded on Sublime Text, then moved to Code after a job change. The transition has been…]]></description><link>https://expectofrontendum.com//my-vs-code-setup/</link><guid isPermaLink="false">https://expectofrontendum.com//my-vs-code-setup/</guid><pubDate>Tue, 09 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h3&gt;Background&lt;/h3&gt;
&lt;p&gt;I am a huge fan of VS Code. I previously coded on Sublime Text, then moved to Code after a job change. The transition has been smooth and I am not looking back!&lt;/p&gt;
&lt;h3&gt;Extensions&lt;/h3&gt;
&lt;h4&gt;Syntax highlighting&lt;/h4&gt;
&lt;p&gt; &lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=mgmcdermott.vscode-language-babel&quot;&gt;Babel Javascript&lt;/a&gt; and  &lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=jpoissonnier.vscode-styled-components&quot;&gt;Styled Components&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don’t think I need to introduce these two ;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript syntax highlighting for ES201x, React JSX, Flow and GraphQL.
Syntax highlighting and IntelliSense for styled-components.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Code formatting&lt;/h4&gt;
&lt;p&gt;  &lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=dbaeumer.vscode-eslint&quot;&gt;ESlint&lt;/a&gt; and &lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=esbenp.prettier-vscode&quot;&gt;Prettier&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have both these plugins set up in such a way that linting errors are highlighted according to the current project’s config.&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=shardulm94.trailing-spaces&quot;&gt;Trailing spaces&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Highlight trailing spaces and delete them in a flash!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I brought this with me from Sublime.&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=2gua.rainbow-brackets&quot;&gt;Rainbow brackets&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;I believe I discovered this gem while exploring &lt;em&gt;best vs code plugins&lt;/em&gt; in the search engine. I find this one immensely helpful overall in my JS code.&lt;/p&gt;
&lt;p&gt;Currently I work with a React/Redux application with actions written this way:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sendRequestWithReload&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;dispatch&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getState&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; api&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;LOADING&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; api&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getRefreshedData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;LOADED&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this plugin each pair of brackets has its own color. Finding a bracket that is not closed has never been so easy!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;… and for the purpose of this blog:&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=shd101wyy.markdown-preview-enhanced&quot;&gt;Markdown Preview Enhanced&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Recommended by a colleague. So convenient, because of its live reload.&lt;/p&gt;
&lt;h3&gt;Settings&lt;/h3&gt;
&lt;h4&gt;View the whole path of the current file&lt;/h4&gt;
&lt;p&gt;This one is especially useful to me when familiarizing myself with a new project. At that moment I don’t know my way around it just yet and the path helps me navigate.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;window.title&quot;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;${activeEditorLong}&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;${separator}&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;${rootName}&lt;/span&gt;&quot;&lt;/span&gt;,
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;View all whitespace&lt;/h4&gt;
&lt;p&gt;There were times when indentation alone was not enough for me to spot an extra white space character. Its use seems obsolete with Prettier right now, but I cannot imagine having it any other way.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;editor.renderWhitespace&quot;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;all&quot;&lt;/span&gt;,&lt;span class=&quot;token string&quot;&gt;&quot;files.insertFinalNewline&quot;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;:&lt;/span&gt; true,
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Quick-open to edit files&lt;/h4&gt;
&lt;p&gt;Open the file in a new tab with quick-open (e.g. &lt;code class=&quot;language-text&quot;&gt;cmd + p&lt;/code&gt;) instead of viewing it with &lt;a href=&quot;https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode&quot;&gt;preview mode&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;workbench.editor.enablePreviewFromQuickOpen&quot;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;:&lt;/span&gt; false,
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Format files&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Format on save&lt;/em&gt; is a life saver. One of my favourite options, here together with the project’s &lt;code class=&quot;language-text&quot;&gt;prettier&lt;/code&gt; config. Trimming trailing whitespace on save and adding that last empty line is a cherry on top.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;prettier.requireConfig&quot;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;:&lt;/span&gt; true,
    &lt;span class=&quot;token string&quot;&gt;&quot;editor.formatOnSave&quot;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;:&lt;/span&gt; true,
    &lt;span class=&quot;token string&quot;&gt;&quot;trailing-spaces.trimOnSave&quot;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;:&lt;/span&gt; true,
    &lt;span class=&quot;token string&quot;&gt;&quot;files.insertFinalNewline&quot;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;:&lt;/span&gt; true,
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item></channel></rss>