<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Expecto Frontendum RSS Feed]]></title><description><![CDATA[A blog about all things frontend]]></description><link>https://expectofrontendum.com</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 27 Jul 2021 07:34:19 GMT</lastBuildDate><item><title><![CDATA[CSS adjustments]]></title><description><![CDATA[What is dev day? This month we started a new kind of initiative in my team at work. We are to devote one day per sprint for our own techâ€¦]]></description><link>https://expectofrontendum.com/css-adjustments/</link><guid isPermaLink="false">https://expectofrontendum.com/css-adjustments/</guid><pubDate>Mon, 26 Jul 2021 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;What is dev day?&lt;/h2&gt;
&lt;p&gt;This month we started a new kind of initiative in my team at work. We are to devote one day per sprint for our own tech development. The reasoning behind it is that in the multitude of numerous tasks there is often not enough space to learn about a new technology. I must admit it has been hard for me to allocate some extra time out of the work week to learn something new. Thereâ€™s always a task to be done!&lt;/p&gt;
&lt;p&gt;I can only hope to add new content each sprint to describe my findings, but letâ€™s be honest - so far I add one blog post per year ðŸ™ˆ&lt;/p&gt;
&lt;h2&gt;Using accessible fonts&lt;/h2&gt;
&lt;p&gt;Recently I read this &lt;a href=&quot;https://uxdesign.cc/testing-fonts-for-accessibility-817f47011078&quot;&gt;insightful article&lt;/a&gt; by Colin Shanley about choosing fonts. He points out three main font design flaws that could make it difficult for users to differentiate between letters and thus make it harder to read.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Characters that look very similar: I, l, 1 (i.e., uppercase i, lowercase l, and the number 1).&lt;/li&gt;
&lt;li&gt;Characters that are mirror images of each other, e.g. letter pairs d b and q p.&lt;/li&gt;
&lt;li&gt;Characters that have similar shapes, e.g. CO eoc (uppercase C and O, lowercase e, o and c).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wrote down these examples here so that I could check for myself that my chosen font (Merriweather) is in fact easy to read.&lt;/p&gt;
&lt;h2&gt;Dark mode&lt;/h2&gt;
&lt;p&gt;Today I decided to learn how to handle dark mode and light mode selected by the user through system or browser preferences.&lt;/p&gt;
&lt;p&gt;First, I added &lt;code class=&quot;language-text&quot;&gt;color-scheme&lt;/code&gt; to indicate to the browser that this page can be rendered in both light and dark mode.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;  &lt;span class=&quot;token selector&quot;&gt;:root&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;color-scheme&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; light dark&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to pass custom dark mode and light mode styling I used &lt;code class=&quot;language-text&quot;&gt;prefers-color-scheme&lt;/code&gt; media feature. You can read more in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;the MDN docs&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-color-scheme&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; dark&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token selector&quot;&gt;color: $&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;textColorDark&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token selector&quot;&gt;;
      background-color: $&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;backgroundColorDark&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token selector&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token selector&quot;&gt;color: $&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;mainColorDark&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefers-color-scheme&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; light&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token selector&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token selector&quot;&gt;color: $&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;textColorLight&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token selector&quot;&gt;;
      background-color: $&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;backgroundColorLight&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token selector&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token selector&quot;&gt;color: $&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;mainColorLight&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Highlight code snippets in Gatsby&lt;/h2&gt;
&lt;p&gt;Code snippets on this blog were already preformatted with &lt;code class=&quot;language-text&quot;&gt;gatsby-remark-prismjs&lt;/code&gt;, but they lacked some kind of visual appeal and were hard to read. I added new styles based on &lt;a href=&quot;https://prismjs.com/&quot;&gt;PrismJS&lt;/a&gt; stylesheets and made sure it all looked pretty and readable in dark mode as well.&lt;/p&gt;
&lt;h2&gt;YOLO driven deployment&lt;/h2&gt;
&lt;p&gt;Testing on production is sometimes the best kind of testing, isnâ€™t it? I deployed my blog to Github Pages, went to the correct URL and it looked perfect! Then I clicked on the newest article to proofread it, andâ€¦ it did not work! The main view of the blog was placed correctly under &lt;a href=&quot;https://kzadurska.github.io/expecto-frontendum/&quot;&gt;https://kzadurska.github.io/expecto-frontendum/&lt;/a&gt;, but all the subpages lacked the &lt;code class=&quot;language-text&quot;&gt;expecto-frontendum&lt;/code&gt; part of the URL, e.g. &lt;a href=&quot;https://kzadurska.github.io/css-adjustments/&quot;&gt;https://kzadurska.github.io/css-adjustments/&lt;/a&gt;. A few google searches later I found the solution in the Gatsby documentation, &lt;a href=&quot;https://www.gatsbyjs.com/docs/how-to/previews-deploys-hosting/path-prefix/&quot;&gt;adding a path prefix&lt;/a&gt;. Phew!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Remote work tips from Basecamp]]></title><description><![CDATA[We are in the middle of the SARS-CoV-2 pandemic and a lot of people start working from home. Me included. Usually I commute to work and codeâ€¦]]></description><link>https://expectofrontendum.com/remote-tips-from-basecamp/</link><guid isPermaLink="false">https://expectofrontendum.com/remote-tips-from-basecamp/</guid><pubDate>Tue, 17 Mar 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;We are in the middle of the SARS-CoV-2 pandemic and a lot of people start working from home. Me included. Usually I commute to work and code in the office. I get to work remotely once in a blue moon: when I feel under the weather or wait for a delivery of a large package. Right now I have the option to socially distance myself and WFH. To be honest, I am finding this situation a little difficult.&lt;/p&gt;
&lt;p&gt;I was lucky to be scrolling through Twitter at the time to catch the &lt;a href=&quot;https://twitter.com/dhh/status/1239959732904812544?s=20&quot;&gt;live Q&amp;#x26;A on remote work&lt;/a&gt; with Jason Fried and David Heinemeier Hansson from Basecamp. The stream took about two hours and there were so many things to get out of it I started taking notes.&lt;/p&gt;
&lt;h3&gt;Relax expectations&lt;/h3&gt;
&lt;p&gt;Transitioning a company (or even just its part) to go full remote in a matter of days is a daunting task. Employees need time to adjust. They need time to organize their space. They share their time with family e.g. due to closed schools. They are stressed and worried about the current health situation. Productivity will not be 100%. And itâ€™s okay.&lt;/p&gt;
&lt;h3&gt;Deadlines are made up&lt;/h3&gt;
&lt;p&gt;Literally. Thinking about it this way is surprisingly freeing. Someone just set them. They can be moved and in this situation that we are all in, they probably &lt;em&gt;will&lt;/em&gt; be moved.&lt;/p&gt;
&lt;h3&gt;Asynchronous work&lt;/h3&gt;
&lt;p&gt;I usually use e-mail for asynchronous communication and slack for the synchronous one. Right now I should treat all written communication as asynchronous and &lt;em&gt;donâ€™t expect an immediate response&lt;/em&gt;. This one is hard for me as I am used to instant replies on chat. I should not assume though, that my task is more important than whatever someoen else works on.&lt;/p&gt;
&lt;h3&gt;Manage isolation&lt;/h3&gt;
&lt;p&gt;What I like about working in the office is the feeling of camaraderie: meeting other people, interacting with them, joking around. Working from home alone would not be so hard if I could just pop out to a pub to grab a beer with friends. But this is not what social distancing is about.&lt;/p&gt;
&lt;h4&gt;Tips from Basecamp:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Break up your work day, break up the feeling of working alone, e.g. by watching tv, taking a walk, cooking lunch.&lt;/li&gt;
&lt;li&gt;Tell your teammates about your loneliness, share it with them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;My addidtions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Add some background sounds to your work space, a little white noise, e.g. &lt;a href=&quot;https://coffitivity.com/&quot;&gt;Coffitivity&lt;/a&gt;, which
&lt;blockquote&gt;
&lt;p&gt;recreates the ambient sounds of a cafe to boost your creativity and help you work better.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Organise a videocall and grab a coffee witha friend (this is a lifesaver for me!)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other cool stuff from Basecamp&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;5 by 12 - (did I get it right?) once a month get 5 random people to talk about non work related stuff for an hour. (Also, it is transcribed),&lt;/li&gt;
&lt;li&gt;Using &lt;a href=&quot;https://tuple.app/&quot;&gt;Tuple&lt;/a&gt; for remote pair programming,&lt;/li&gt;
&lt;li&gt;The concept of &lt;em&gt;no shared calendars&lt;/em&gt;. Organising your own time by not letting others govern it.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[My VS Code setup]]></title><description><![CDATA[Background I am a huge fan of VS Code. I previously coded on Sublime Text, then moved to Code after a job change. The transition has beenâ€¦]]></description><link>https://expectofrontendum.com/my-vs-code-setup/</link><guid isPermaLink="false">https://expectofrontendum.com/my-vs-code-setup/</guid><pubDate>Tue, 09 Apr 2019 00:00:00 GMT</pubDate><content:encoded>&lt;h3&gt;Background&lt;/h3&gt;
&lt;p&gt;I am a huge fan of VS Code. I previously coded on Sublime Text, then moved to Code after a job change. The transition has been smooth and I am not looking back!&lt;/p&gt;
&lt;h3&gt;Extensions&lt;/h3&gt;
&lt;h4&gt;Syntax highlighting&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=mgmcdermott.vscode-language-babel&quot;&gt;Babel Javascript&lt;/a&gt; and  &lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=jpoissonnier.vscode-styled-components&quot;&gt;Styled Components&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I donâ€™t think I need to introduce these two ;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript syntax highlighting for ES201x, React JSX, Flow and GraphQL.
Syntax highlighting and IntelliSense for styled-components.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Code formatting&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=dbaeumer.vscode-eslint&quot;&gt;ESlint&lt;/a&gt; and &lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=esbenp.prettier-vscode&quot;&gt;Prettier&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have both these plugins set up in such a way that linting errors are highlighted according to the current projectâ€™s config.&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=shardulm94.trailing-spaces&quot;&gt;Trailing spaces&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Highlight trailing spaces and delete them in a flash!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I brought this with me from Sublime.&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=2gua.rainbow-brackets&quot;&gt;Rainbow brackets&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;I believe I discovered this gem while exploring &lt;em&gt;best vs code plugins&lt;/em&gt; in the search engine. I find this one immensely helpful overall in my JS code.&lt;/p&gt;
&lt;p&gt;Currently I work with a React/Redux application with actions written this way:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sendRequestWithReload&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;dispatch&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getState&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; api&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;LOADING&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; api&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getRefreshedData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;LOADED&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this plugin each pair of brackets has its own color. Finding a bracket that is not closed has never been so easy!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;â€¦ and for the purpose of this blog:&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/itemdetails?itemName=shd101wyy.markdown-preview-enhanced&quot;&gt;Markdown Preview Enhanced&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Recommended by a colleague. So convenient, because of its live reload.&lt;/p&gt;
&lt;h3&gt;Settings&lt;/h3&gt;
&lt;h4&gt;View the whole path of the current file&lt;/h4&gt;
&lt;p&gt;This one is especially useful to me when familiarizing myself with a new project. At that moment I donâ€™t know my way around it just yet and the path helps me navigate.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;window.title&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;${activeEditorLong}&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;${separator}&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;${rootName}&lt;/span&gt;&quot;&lt;/span&gt;,
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;View all whitespace&lt;/h4&gt;
&lt;p&gt;There were times when indentation alone was not enough for me to spot an extra white space character. Its use seems obsolete with Prettier right now, but I cannot imagine having it any other way.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;editor.renderWhitespace&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;all&quot;&lt;/span&gt;,&lt;span class=&quot;token string&quot;&gt;&quot;files.insertFinalNewline&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; true,
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Quick-open to edit files&lt;/h4&gt;
&lt;p&gt;Open the file in a new tab with quick-open (e.g. &lt;code class=&quot;language-text&quot;&gt;cmd + p&lt;/code&gt;) instead of viewing it with &lt;a href=&quot;https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode&quot;&gt;preview mode&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;workbench.editor.enablePreviewFromQuickOpen&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; false,
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Format files&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Format on save&lt;/em&gt; is a life saver. One of my favourite options, here together with the projectâ€™s &lt;code class=&quot;language-text&quot;&gt;prettier&lt;/code&gt; config. Trimming trailing whitespace on save and adding that last empty line is a cherry on top.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;prettier.requireConfig&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; true,
    &lt;span class=&quot;token string&quot;&gt;&quot;editor.formatOnSave&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; true,
    &lt;span class=&quot;token string&quot;&gt;&quot;trailing-spaces.trimOnSave&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; true,
    &lt;span class=&quot;token string&quot;&gt;&quot;files.insertFinalNewline&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; true,
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item></channel></rss>