{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/constants.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/GlobalStyle.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","components_Layout__WEBPACK_IMPORTED_MODULE_1__","components_SEO__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","_ref","data","location","siteTitle","site","siteMetadata","title","a","createElement","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","mainColor","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","description","lang","meta","array","keywords","arrayOf","SEO","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","authors","concat","length","join","_public_static_d_1794625727_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","GlobalStyle","createGlobalStyle","_templateObject","HomeLink","styled","Link","withConfig","displayName","componentId","Main","main","node","Layout","react_default","Div_default","column","components_GlobalStyle","to"],"mappings":"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","file":"component---src-pages-404-js-4ba3aa45e0cc710cc083.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from 'components/Layout'\nimport SEO from 'components/SEO'\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const mainColor = '#005882'\n\nmodule.exports = {\n  mainColor,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nconst SEO = ({ description, lang, meta, keywords, title }) => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description\n\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:title',\n              content: title,\n            },\n            {\n              property: 'og:description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:type',\n              content: 'website',\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:creator',\n              content: data.site.siteMetadata.authors,\n            },\n            {\n              name: 'twitter:title',\n              content: title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nSEO.propTypes = propTypes\nSEO.defaultProps = defaultProps\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        authors\n      }\n    }\n  }\n`\n","import { createGlobalStyle } from 'styled-components'\n\nimport { mainColor } from 'utils/constants'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font: 14px/1.5 Merriweather, Georgia, serif;\n    margin: 0;\n    box-sizing: border-box;\n    color: #333;\n  }\n\n  *, *::after, *::before {\n    box-sizing: inherit;\n  }\n\n  h1, h2, h3, h4, h5 {\n    font-family: Cinzel, serif;\n    font-weight: 100;\n    line-height: 0.9;\n\n    a {\n      text-decoration: none;\n    }\n  }\n\n  a {\n    color: ${mainColor};\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n\n  blockquote {\n    margin: 0;\n    border-left: 5px solid rgba(0, 88, 130, .3);\n    padding: 0 1em;\n\n    font-style: italic;\n    font-weight: 300;\n  }\n\n  .gatsby-highlight {\n    overflow: auto;\n    font-size: 12px;\n  }\n`\n\nexport default GlobalStyle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport Div from 'styled-kit/Div'\n\nimport GlobalStyle from 'components/GlobalStyle'\n\nconst HomeLink = styled(Link)`\n  flex: none;\n  display: block;\n  padding: 32px 16px;\n  font: 35px/0.6 Cinzel, serif;\n  text-decoration: none;\n`\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  padding: 16px;\n  width: 100%;\n  max-width: 1024px;\n  overflow: auto;\n`\n\nconst propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\nconst Layout = ({ title, children }) => (\n  <Div column>\n    <GlobalStyle />\n    <HomeLink to=\"/\">{title}</HomeLink>\n    <Main>{children}</Main>\n  </Div>\n)\n\nLayout.propTypes = propTypes\n\nexport default Layout\n"],"sourceRoot":""}