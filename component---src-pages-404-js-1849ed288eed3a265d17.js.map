{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/GlobalStyle.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","_ref","data","location","siteTitle","site","siteMetadata","title","a","createElement","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","description","lang","meta","array","keywords","arrayOf","SEO","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","authors","concat","length","join","_public_static_d_1794625727_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","GlobalStyle","createGlobalStyle","_templateObject","HomeLink","styled","Link","withConfig","displayName","componentId","Layout","react_default","_StyledDiv","column","components_GlobalStyle","to","Div_default","as","pBottom","flex","maxWidth","padding","margin"],"mappings":"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","file":"component---src-pages-404-js-1849ed288eed3a265d17.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nconst SEO = ({ description, lang, meta, keywords, title }) => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description\n\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:title',\n              content: title,\n            },\n            {\n              property: 'og:description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:type',\n              content: 'website',\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:creator',\n              content: data.site.siteMetadata.authors,\n            },\n            {\n              name: 'twitter:title',\n              content: title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nSEO.propTypes = propTypes\nSEO.defaultProps = defaultProps\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        authors\n      }\n    }\n  }\n`\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font: 16px/1.5 Montserrat, sans-serif;\n    margin: 0;\n  }\n\n  h1, h2, h3, h4, h5 {\n    font-family: Cinzel, serif;\n    font-weight: 100;\n    line-height: 0.9;\n\n    a {\n      text-decoration: none;\n    }\n  }\n\n  a {\n    color: #005882;\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport Div from 'styled-kit/Div'\n\nimport GlobalStyle from './GlobalStyle'\n\nconst HomeLink = styled(Link)`\n  flex: none;\n\n  display: block;\n  padding: 32px 16px;\n\n  font: 35px/0.6 Cinzel, serif;\n  text-align: center;\n  text-decoration: none;\n`\n\nconst Layout = ({ title, children }) => (\n  <Div column css=\"min-height: 100vh;\">\n    <GlobalStyle />\n\n    <HomeLink to=\"/\">{title}</HomeLink>\n\n    <Div as=\"main\" column pBottom={24} flex={1} maxWidth={630} padding=\"0 16px\" margin=\"0 auto\">\n      {children}\n    </Div>\n  </Div>\n)\n\nexport default Layout\n"],"sourceRoot":""}