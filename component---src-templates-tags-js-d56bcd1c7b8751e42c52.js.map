{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/constants.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/GlobalStyle.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Post.js","webpack:///./src/components/PostsList.js"],"names":["propTypes","pageContext","PropTypes","shape","tag","string","isRequired","data","allMarkdownRemark","totalCount","number","edges","arrayOf","node","fields","slug","frontmatter","title","TagPageTemplate","_ref","location","site","siteMetadata","_data$allMarkdownRema","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","components_Layout__WEBPACK_IMPORTED_MODULE_4__","components_SEO__WEBPACK_IMPORTED_MODULE_5__","keywords","_StyledH","components_PostsList__WEBPACK_IMPORTED_MODULE_6__","posts","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","object","func","m","module","exports","require","default","mainColor","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","description","lang","meta","array","SEO","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","authors","concat","length","join","_public_static_d_1794625727_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","GlobalStyle","createGlobalStyle","_templateObject","HomeLink","styled","Link","withConfig","displayName","componentId","Main","main","Layout","react_default","Div_default","column","components_GlobalStyle","to","post","date","summary","Post","objectWithoutPropertiesLoose_default","gatsby_browser_entry","dangerouslySetInnerHTML","__html","PostsList","listTop","map","key"],"mappings":"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","file":"component---src-templates-tags-js-d56bcd1c7b8751e42c52.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport Layout from 'components/Layout'\nimport SEO from 'components/SEO'\nimport PostsList from 'components/PostsList'\n\nconst propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nconst TagPageTemplate = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { title } = data.site.siteMetadata\n  const { edges, totalCount } = data.allMarkdownRemark\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={`\"${tag}\" posts`} keywords={['blog', 'gatsby', 'javascript', 'react']} />\n\n      <h4 css=\"text-align: center; margin: 0 0 16px; height: 16px;\">\n        {`${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tag}\"`}\n      </h4>\n\n      <PostsList posts={edges} />\n    </Layout>\n  )\n}\n\nTagPageTemplate.propTypes = propTypes\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            summary\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const mainColor = '#005882'\n\nmodule.exports = {\n  mainColor,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nconst SEO = ({ description, lang, meta, keywords, title }) => (\n  <StaticQuery\n    query={detailsQuery}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description\n\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:title',\n              content: title,\n            },\n            {\n              property: 'og:description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:type',\n              content: 'website',\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:creator',\n              content: data.site.siteMetadata.authors,\n            },\n            {\n              name: 'twitter:title',\n              content: title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )\n    }}\n  />\n)\n\nSEO.propTypes = propTypes\nSEO.defaultProps = defaultProps\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        authors\n      }\n    }\n  }\n`\n","import { createGlobalStyle } from 'styled-components'\n\nimport { mainColor } from 'utils/constants'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font: 14px/1.5 Merriweather, Georgia, serif;\n    margin: 0;\n    box-sizing: border-box;\n    color: #333;\n  }\n\n  *, *::after, *::before {\n    box-sizing: inherit;\n  }\n\n  h1, h2, h3, h4, h5 {\n    font-family: Cinzel, serif;\n    font-weight: 100;\n    line-height: 0.9;\n\n    a {\n      text-decoration: none;\n    }\n  }\n\n  a {\n    color: ${mainColor};\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n\n  blockquote {\n    margin: 0;\n    border-left: 5px solid rgba(0, 88, 130, .3);\n    padding: 0 1em;\n\n    font-style: italic;\n    font-weight: 300;\n  }\n\n  .gatsby-highlight {\n    overflow: auto;\n    font-size: 12px;\n  }\n`\n\nexport default GlobalStyle\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport Div from 'styled-kit/Div'\n\nimport GlobalStyle from 'components/GlobalStyle'\n\nconst HomeLink = styled(Link)`\n  flex: none;\n  display: block;\n  padding: 32px 16px;\n  font: 35px/0.6 Cinzel, serif;\n  text-decoration: none;\n`\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  padding: 16px;\n  width: 100%;\n  max-width: 1024px;\n  overflow: auto;\n`\n\nconst propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\nconst Layout = ({ title, children }) => (\n  <Div column>\n    <GlobalStyle />\n    <HomeLink to=\"/\">{title}</HomeLink>\n    <Main>{children}</Main>\n  </Div>\n)\n\nLayout.propTypes = propTypes\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Div from 'styled-kit/Div'\n\nconst propTypes = {\n  post: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }),\n    frontmatter: PropTypes.shape({\n      date: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      summary: PropTypes.string,\n    }),\n  }),\n}\n\nexport default function Post({ post, ...props }) {\n  return (\n    <Div column {...props}>\n      <h2 css=\"margin: 0;\">\n        <Link to={post.fields.slug}>{post.frontmatter.title}</Link>\n      </h2>\n\n      <small>{post.frontmatter.date}</small>\n\n      <p dangerouslySetInnerHTML={{ __html: post.frontmatter.summary }} />\n    </Div>\n  )\n}\n\nPost.propTypes = propTypes\n","import React from 'react'\nimport Div from 'styled-kit/Div'\n\nimport Post from 'components/Post'\n\nconst PostsList = ({ posts, ...props }) => (\n  <Div column listTop={32} {...props}>\n    {posts.map(post => (\n      <Post key={post.node.fields.slug} post={post.node} />\n    ))}\n  </Div>\n)\n\nexport default PostsList\n"],"sourceRoot":""}